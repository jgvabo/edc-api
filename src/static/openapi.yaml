openapi: 3.0.0
info:
  description: API Workshop
  version: 1.0.0
  title: API Workshop
  contact:
    email: oyron@equinor.com
  license:
    name: GNU GPLv3
    url: 'https://choosealicense.com/licenses/gpl-3.0/'
servers:
  - url: http://localhost:3000/api
    description: Local runtime
  - url: https://edc-api.azurewebsites.net/api
    description: Azure runtime

paths:
  /books:
    get:
      tags:
        - book
      summary: Finds all books
      description: Return all books
      operationId: getBooks
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    
    post:
      tags:
        - book
      summary: Store new book
      description: ""
      operationId: storeBook
      requestBody:
        required: true
        description: New book object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookData'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Book'
                  
  /books/{id}:
    get:
      tags:
        - book
      summary: Get book
      description: ""
      operationId: getBook
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Book id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Book'
        '400':
          description: Bad request
        '404':
          description: Not found
    put:
      tags:
        - book
      summary: Update existing book
      description: ""
      operationId: updateBook
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Book id
      requestBody:
        required: true
        description: Book to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Book'
        '400':
          description: Bad request
        '404':
          description: Not found
          
    delete:
      tags:
        - book
      summary: Delete existing book
      description: ""
      operationId: deleteBook
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Book id
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '404':
          description: Not found
              
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
      required: ["id", "title", "author"]
      
    BookData:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
      required: ["title", "author"]
        